name: Deploy Website to GCP (Manual SSH)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出你的网站代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 【核心】建立 SSH 连接并部署
      - name: Deploy via manual SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }} # 应该已经是 deployer
        run: |
          # --- 准备 SSH 环境 ---
          echo "Setting up SSH..."
          # 创建 .ssh 目录
          mkdir -p ~/.ssh
          # 将私钥从 Secret 写入文件
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          # 设置严格的私钥文件权限
          chmod 600 ~/.ssh/id_rsa
          # 为了安全，禁用严格的主机密钥检查
          echo "Host ${SSH_HOST}" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

          # --- 开始部署 ---
          echo "Connecting to ${SSH_USERNAME}@${SSH_HOST}..."
          ssh "${SSH_USERNAME}@${SSH_HOST}" << 'EOF'
            # --- 以下是在远程服务器上执行的命令 ---
            echo "🚀 Starting deployment as user: $(whoami) on server: $(hostname)"
            
            # 1. 定义网站根目录
            TARGET_DIR="/var/www/html"
            echo "Deployment target directory is set to: ${TARGET_DIR}"
            
            # 2. 进入目录
            cd $TARGET_DIR || exit 1
            echo "Changed directory to: $(pwd)"
            
            # 3. 清空旧文件
            echo "🧹 Cleaning up old files..."
            # 使用 find 和 delete 更安全
            find . -mindepth 1 -delete
            
            # 4. 在这里，我们需要一种方法把文件从 Actions Runner 传到服务器
            #    由于直接 SSH 进去后无法传文件，我们改用 rsync
            #    退出当前的 SSH 会话
          EOF
          
          # --- 使用 rsync 传输文件 (最可靠的方式) ---
          echo "Synchronizing files using rsync..."
          rsync -avz -e "ssh -i ~/.ssh/id_rsa" ./ "${SSH_USERNAME}@${SSH_HOST}:/var/www/html/"

          # --- 再次 SSH 进去设置最终权限 ---
          echo "Setting final permissions on server..."
          ssh "${SSH_USERNAME}@${SSH_HOST}" << 'EOF'
            TARGET_DIR="/var/www/html"
            echo "🔐 Setting permissions for www-data user..."
            # 使用 sudo 是因为 deployer 用户可能没有权限 chown 给 www-data
            # 我们需要给 deployer 用户免密 sudo 的权限
            sudo chown -R www-data:www-data $TARGET_DIR
            echo "✅ Deployment successful!"
          EOF
